!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AnalyzeMuon	HLTEfficiencyAnalysis.C	/^void HLTEfficiencyAnalysis::AnalyzeMuon()$/;"	f	class:HLTEfficiencyAnalysis
Ateff	include/HLTEfficiencyAnalysis.h	/^    TEfficiency* Ateff;$/;"	m	class:HLTEfficiencyAnalysis
BISECTIONCLASS_H	source/BisectionClass.C	2;"	d	file:
BISECTION_H	include/bisection.h	2;"	d
BUILTIN	include/ChainHandler.h	/^            BUILTIN,$/;"	e	enum:treeReaderSpace::BranchType::value_type
Begin	HLTEfficiencyAnalysis.C	/^void HLTEfficiencyAnalysis::Begin()$/;"	f	class:HLTEfficiencyAnalysis
Begin	source/HLTEfficiencyAnalysis.C	/^HLTEfficiencyAnalysis::Begin()$/;"	f	class:HLTEfficiencyAnalysis
BranchType	include/ChainHandler.h	/^    struct BranchType$/;"	s	namespace:treeReaderSpace
Bteff	include/HLTEfficiencyAnalysis.h	/^    TEfficiency* Bteff;$/;"	m	class:HLTEfficiencyAnalysis
CHAINHANDLER_H	include/ChainHandler.h	3;"	d
CLASS	include/ChainHandler.h	/^            CLASS,$/;"	e	enum:treeReaderSpace::BranchType::value_type
ChainHandler	include/ChainHandler.h	/^class ChainHandler$/;"	c
ChainHandler	source/ChainHandler.C	/^ChainHandler::ChainHandler()$/;"	f	class:ChainHandler
ChainHandler_obj	source/ChainHandler.C	/^ChainHandler ChainHandler_obj;$/;"	v
Clear	include/ChainHandler.h	/^    void Handle<T>::Clear()$/;"	f	class:treeReaderSpace::Handle
Cteff	include/HLTEfficiencyAnalysis.h	/^    TEfficiency* Cteff;$/;"	m	class:HLTEfficiencyAnalysis
DoAnalysis	HLTEfficiencyAnalysis.C	/^void HLTEfficiencyAnalysis::DoAnalysis(TChain& chain)$/;"	f	class:HLTEfficiencyAnalysis
Dteff	include/HLTEfficiencyAnalysis.h	/^    TEfficiency* Dteff;$/;"	m	class:HLTEfficiencyAnalysis
End	HLTEfficiencyAnalysis.C	/^void HLTEfficiencyAnalysis::End()$/;"	f	class:HLTEfficiencyAnalysis
End	source/HLTEfficiencyAnalysis.C	/^HLTEfficiencyAnalysis::End()$/;"	f	class:HLTEfficiencyAnalysis
EvaluateIndividThresh	HLTEfficiencyAnalysis.C	/^void HLTEfficiencyAnalysis::EvaluateIndividThresh()$/;"	f	class:HLTEfficiencyAnalysis
Frac	source/userInfo.C	/^Float_t Frac = 0.0059;$/;"	v
GetAlgACombinedThresh	source/userInfo.C	/^Float_t userInfo::GetAlgACombinedThresh() const {return ( algACombinedThresh );};$/;"	f	class:userInfo
GetAlgAIndividThresh	source/userInfo.C	/^Float_t userInfo::GetAlgAIndividThresh() const { return ( algAIndividThresh ); }$/;"	f	class:userInfo
GetAlgBCombinedThresh	source/userInfo.C	/^Float_t userInfo::GetAlgBCombinedThresh() const {return ( algBCombinedThresh );};$/;"	f	class:userInfo
GetAlgBIndividThresh	source/userInfo.C	/^Float_t userInfo::GetAlgBIndividThresh() const { return ( algBIndividThresh ); }$/;"	f	class:userInfo
GetEntry	include/ChainHandler.h	/^    void Handle<T>::GetEntry(const unsigned int entry)$/;"	f	class:treeReaderSpace::Handle
GetEntry	source/ChainHandler.C	/^void ChainHandler::GetEntry(const unsigned int entry)$/;"	f	class:ChainHandler
GetNumMuonPassProcess1	source/userInfo.C	/^Int_t userInfo::GetNumMuonPassProcess1() const { return (NumMuonPassProcess1WithActintCut);}$/;"	f	class:userInfo
GetNumPassNoAlgPassProcess1	source/userInfo.C	/^Int_t userInfo::GetNumPassNoAlgPassProcess1() const { return ( NumPassnoalgPassProcess1);};$/;"	f	class:userInfo
HLTEfficiencyAnalysis	HLTEfficiencyAnalysis.C	/^HLTEfficiencyAnalysis::HLTEfficiencyAnalysis( const TString& algA , const TString& algB )$/;"	f	class:HLTEfficiencyAnalysis
HLTEfficiencyAnalysis	include/HLTEfficiencyAnalysis.h	/^class HLTEfficiencyAnalysis$/;"	c
HLTEfficiencyAnalysis	source/HLTEfficiencyAnalysis.C	/^HLTEfficiencyAnalysis::HLTEfficiencyAnalysis()$/;"	f	class:HLTEfficiencyAnalysis
HLTEfficiencyAnalysis	source/HLTEfficiencyAnalysis.C	/^class HLTEfficiencyAnalysis$/;"	c	file:
HLTEfficiencyAnalysis_H	include/HLTEfficiencyAnalysis.h	2;"	d
Handle	include/ChainHandler.h	/^            Handle() {}$/;"	f	class:treeReaderSpace::Handle
Handle	include/ChainHandler.h	/^    Handle<T>::Handle(const std::string& branch_name)$/;"	f	class:treeReaderSpace::Handle
Handle	include/ChainHandler.h	/^    class Handle$/;"	c	namespace:treeReaderSpace
IncrementNumMuonPassProcess1	source/userInfo.C	/^void userInfo::IncrementNumMuonPassProcess1(){ NumMuonPassProcess1++; };$/;"	f	class:userInfo
IncrementNumPassnoalgPassProcess1	source/userInfo.C	/^void userInfo::IncrementNumPassnoalgPassProcess1(){ NumPassnoalgPassProcess1++; };$/;"	f	class:userInfo
Init	include/ChainHandler.h	/^    void Handle<T>::Init(TTree& tree)$/;"	f	class:treeReaderSpace::Handle
Init	source/ChainHandler.C	/^void ChainHandler::Init(TTree& tree)$/;"	f	class:ChainHandler
Init	source/ChainHandler.C	/^void ChainHandler::Init(TTree* const tree)$/;"	f	class:ChainHandler
IsClean	source/mincerMacros.C	/^Bool_t IsClean( const Float_t cleancutsflag , const Float_t recalbrokeflag){$/;"	f
IsLoaded	include/ChainHandler.h	/^    bool Handle<T>::IsLoaded() const$/;"	f	class:treeReaderSpace::Handle
IsMuon	source/mincerMacros.C	/^Bool_t IsMuon( const Float_t passmuon , const Float_t passmuvarmed )$/;"	f
Load	include/ChainHandler.h	/^    void Handle<T>::Load()$/;"	f	class:treeReaderSpace::Handle
LoadAllBranches	source/ChainHandler.C	/^void ChainHandler::LoadAllBranches()$/;"	f	class:ChainHandler
MINCERMACROS_H	include/mincerMacros.h	2;"	d
NOT_SET	include/ChainHandler.h	/^            NOT_SET,$/;"	e	enum:treeReaderSpace::BranchType::value_type
Nbins	source/userInfo.C	/^Int_t Nbins = 1200;$/;"	v
NumMuonPassProcess1	include/userInfo.h	/^    Int_t NumMuonPassProcess1;$/;"	m	class:userInfo
NumMuonPassProcess2AlgA	include/userInfo.h	/^    Int_t NumMuonPassProcess2AlgA;$/;"	m	class:userInfo
NumMuonPassProcess2AlgB	include/userInfo.h	/^    Int_t NumMuonPassProcess2AlgB;$/;"	m	class:userInfo
NumMuonPassProcess2Combined	include/userInfo.h	/^    Int_t NumMuonPassProcess2Combined;$/;"	m	class:userInfo
NumPassnoalgPassProcess1	include/userInfo.h	/^    Int_t NumPassnoalgPassProcess1;$/;"	m	class:userInfo
NumPassnoalgProcess2AlgA	include/userInfo.h	/^    Int_t NumPassnoalgProcess2AlgA;$/;"	m	class:userInfo
NumPassnoalgProcess2AlgB	include/userInfo.h	/^    Int_t NumPassnoalgProcess2AlgB;$/;"	m	class:userInfo
NumPassnoalgProcess2AlgCombined	include/userInfo.h	/^    Int_t NumPassnoalgProcess2AlgCombined;$/;"	m	class:userInfo
Print	source/userInfo.C	/^void userInfo::Print(Option_t *option) const{$/;"	f	class:userInfo
SetBranchType	include/ChainHandler.h	/^    void Handle<T>::SetBranchType(const std::string& branch_class)$/;"	f	class:treeReaderSpace::Handle
ZbBranchInit	source/ChainHandler.C	/^const void ChainHandler::ZbBranchInit(TTree& zbTree){$/;"	f	class:ChainHandler
actinTCut	source/userInfo.C	/^Float_t actinTCut = 35.0;$/;"	v
actintAnalysis	macros/actintAnalysis.C	/^void actintAnalysis(){$/;"	f
actintCut	include/userInfo.h	/^    Float_t actintCut;$/;"	m	class:userInfo
actint_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > actint_handle;$/;"	m	class:ChainHandler
algA	source/ChainHandler.C	/^const Float_t& ChainHandler::algA(){return algA_handle.get();};$/;"	f	class:ChainHandler
algA	source/ChainHandler.C	/^const TString algA = parameters->getAlgAName();$/;"	v
algACombinedThresh	include/userInfo.h	/^    Float_t algACombinedThresh;$/;"	m	class:userInfo
algAIndividThresh	include/userInfo.h	/^    Float_t algAIndividThresh;$/;"	m	class:userInfo
algAMETHist	include/HLTEfficiencyAnalysis.h	/^    TH1F *algAMETHist;$/;"	m	class:HLTEfficiencyAnalysis
algAName	include/userInfo.h	/^    TString algAName;$/;"	m	class:userInfo
algATarget	include/HLTEfficiencyAnalysis.h	/^    TH1F *algATarget;$/;"	m	class:HLTEfficiencyAnalysis
algA_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > algA_handle;$/;"	m	class:ChainHandler
algB	source/ChainHandler.C	/^const Float_t& ChainHandler::algB(){return algB_handle.get();};$/;"	f	class:ChainHandler
algB	source/ChainHandler.C	/^const TString algB = parameters->getAlgBName();$/;"	v
algBCombinedThresh	include/userInfo.h	/^    Float_t algBCombinedThresh;$/;"	m	class:userInfo
algBIndividThresh	include/userInfo.h	/^    Float_t algBIndividThresh;$/;"	m	class:userInfo
algBMETHist	include/HLTEfficiencyAnalysis.h	/^    TH1F *algBMETHist;$/;"	m	class:HLTEfficiencyAnalysis
algBName	include/userInfo.h	/^    TString algBName;$/;"	m	class:userInfo
algBTarget	include/HLTEfficiencyAnalysis.h	/^    TH1F *algBTarget;$/;"	m	class:HLTEfficiencyAnalysis
algB_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > algB_handle;$/;"	m	class:ChainHandler
algCMETHist	include/HLTEfficiencyAnalysis.h	/^    TH1F *algCMETHist;$/;"	m	class:HLTEfficiencyAnalysis
algCTarget	include/HLTEfficiencyAnalysis.h	/^    TH1F *algCTarget;$/;"	m	class:HLTEfficiencyAnalysis
bisection	include/bisection.h	/^class bisection{$/;"	c
bisection	source/BisectionClass.C	/^Float_t HLTEfficiencyAnalysis::bisection(const Float_t binWidth,$/;"	f	class:HLTEfficiencyAnalysis
bisection	source/bisection.C	/^Float_t HLTEfficiencyAnalysis::bisection(const Float_t binWidth,$/;"	f	class:HLTEfficiencyAnalysis
clean	compile.C	/^void clean()$/;"	f
cleanCutsFlag	source/ChainHandler.C	/^const Float_t& ChainHandler::cleanCutsFlag(){return cleanCutsFlag_handle.get();};$/;"	f	class:ChainHandler
cleanCutsFlag_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > cleanCutsFlag_handle;$/;"	m	class:ChainHandler
compile	compile.C	/^bool compile(const std::string& option = "")$/;"	f
computeMetNoMu	source/mincerMacros.C	/^Float_t computeMetNoMu( const Float_t mexoffrecal , const Float_t meyoffrecal ,$/;"	f
computeThresh	source/mincerMacros.C	/^Float_t computeThresh(const TH1F* target, const Float_t numberEventsToKeep)$/;"	f
determineMuonEventsKeptCombined	source/mincerMacros.C	/^Float_t determineMuonEventsKeptCombined( const TString& algA, const Float_t threshA,$/;"	f
determineZeroBiasThresh	source/mincerMacros.C	/^Float_t determineZeroBiasThresh( const TString& algName, Int_t & numPass , const Float_t frac,$/;"	f
epsilon	include/userInfo.h	/^    Int_t epsilon;$/;"	m	class:userInfo
epson	source/userInfo.C	/^Int_t epson = 25;$/;"	v
event	source/ChainHandler.C	/^    const unsigned int& event() {return ChainHandler_obj.event();}$/;"	f	namespace:trkeff
event	source/ChainHandler.C	/^const unsigned int& ChainHandler::event() {return event_handle.get();}$/;"	f	class:ChainHandler
event_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< unsigned int > event_handle;$/;"	m	class:ChainHandler
frac	include/userInfo.h	/^    Float_t frac;$/;"	m	class:userInfo
get	include/ChainHandler.h	/^    const T& Handle<T>::get()$/;"	f	class:treeReaderSpace::Handle
getActintCut	source/userInfo.C	/^Float_t userInfo::getActintCut() const { return( actintCut);}$/;"	f	class:userInfo
getAlgAName	source/userInfo.C	/^TString userInfo::getAlgAName() const { return (algAName);}$/;"	f	class:userInfo
getAlgBName	source/userInfo.C	/^TString userInfo::getAlgBName() const { return (algBName);}$/;"	f	class:userInfo
getDate	source/userInfo.C	/^TDatime userInfo::getDate() const { now.Print();return(now);};$/;"	f	class:userInfo
getEpsilon	source/userInfo.C	/^Int_t userInfo::getEpsilon() const {return(epsilon);}$/;"	f	class:userInfo
getFrac	source/userInfo.C	/^Float_t userInfo::getFrac() const { return (frac); }$/;"	f	class:userInfo
getMetL1Thresh	source/userInfo.C	/^Float_t userInfo::getMetL1Thresh() const { return( metl1thresh); }$/;"	f	class:userInfo
getMetMax	source/userInfo.C	/^Float_t userInfo::getMetMax() const { return (metmax);}$/;"	f	class:userInfo
getMetMin	source/userInfo.C	/^Float_t userInfo::getMetMin() const {return (metmin);}$/;"	f	class:userInfo
getMuonNentries	source/userInfo.C	/^Int_t userInfo::getMuonNentries() const { return(muonNentries);}$/;"	f	class:userInfo
getNbins	source/userInfo.C	/^Int_t userInfo::getNbins() const { return(nbins); }$/;"	f	class:userInfo
getNumbToKeep	source/userInfo.C	/^Int_t userInfo::getNumbToKeep() const { return( numberEventsToKeep );}$/;"	f	class:userInfo
getThreshNentries	source/userInfo.C	/^Int_t userInfo::getThreshNentries() const { return (passnoAlgNentries) ; }$/;"	f	class:userInfo
get_algA	source/ChainHandler.C	/^    const Float_t& get_algA(){return ChainHandler_obj.algA();};$/;"	f	namespace:trkeff
get_algB	source/ChainHandler.C	/^    const Float_t& get_algB(){return ChainHandler_obj.algB();};$/;"	f	namespace:trkeff
get_cleanCutsFlag	source/ChainHandler.C	/^    const Float_t& get_cleanCutsFlag(){return ChainHandler_obj.cleanCutsFlag();};$/;"	f	namespace:trkeff
get_metl1	source/ChainHandler.C	/^    const Float_t& get_metl1(){return ChainHandler_obj.metl1();};$/;"	f	namespace:trkeff
get_metoffrecal	source/ChainHandler.C	/^    const Float_t& get_metoffrecal(){return ChainHandler_obj.metoffrecal();};$/;"	f	namespace:trkeff
get_metoffrecalmuon	source/ChainHandler.C	/^    const Float_t& get_metoffrecalmuon(){return ChainHandler_obj.metoffrecalmuon();};$/;"	f	namespace:trkeff
get_metrefmuon	source/ChainHandler.C	/^    const Float_t& get_metrefmuon(){return ChainHandler_obj.metrefmuon();};$/;"	f	namespace:trkeff
get_mexoffrecal	source/ChainHandler.C	/^    const Float_t& get_mexoffrecal(){return ChainHandler_obj.mexoffrecal();};$/;"	f	namespace:trkeff
get_mexoffrecalmuon	source/ChainHandler.C	/^    const Float_t& get_mexoffrecalmuon(){return ChainHandler_obj.mexoffrecalmuon();};$/;"	f	namespace:trkeff
get_mexrefmuon	source/ChainHandler.C	/^    const Float_t& get_mexrefmuon(){return ChainHandler_obj.mexrefmuon();};$/;"	f	namespace:trkeff
get_meyoffrecal	source/ChainHandler.C	/^    const Float_t& get_meyoffrecal(){return ChainHandler_obj.meyoffrecal();};$/;"	f	namespace:trkeff
get_meyoffrecalmuon	source/ChainHandler.C	/^    const Float_t& get_meyoffrecalmuon(){return ChainHandler_obj.meyoffrecalmuon();};$/;"	f	namespace:trkeff
get_meyrefmuon	source/ChainHandler.C	/^    const Float_t& get_meyrefmuon(){return ChainHandler_obj.meyrefmuon();};$/;"	f	namespace:trkeff
get_muonFileName	source/userInfo.C	/^TString userInfo::get_muonFileName() const { return(muonFileName);}$/;"	f	class:userInfo
get_passmuon	source/ChainHandler.C	/^    const Float_t& get_passmuon(){return ChainHandler_obj.passmuon();};$/;"	f	namespace:trkeff
get_passmuvarmed	source/ChainHandler.C	/^    const Float_t& get_passmuvarmed(){return ChainHandler_obj.passmuvarmed();};$/;"	f	namespace:trkeff
get_passnoalgFileName	source/userInfo.C	/^TString userInfo::get_passnoalgFileName() const { return(passNoAlgFile);}$/;"	f	class:userInfo
get_passnoalgL1XE10	source/ChainHandler.C	/^    const Float_t& get_passnoalgL1XE10(){return ChainHandler_obj.passnoalgL1XE10();};$/;"	f	namespace:trkeff
get_passnoalgL1XE30	source/ChainHandler.C	/^    const Float_t& get_passnoalgL1XE30(){return ChainHandler_obj.passnoalgL1XE30();};$/;"	f	namespace:trkeff
get_passnoalgL1XE40	source/ChainHandler.C	/^    const Float_t& get_passnoalgL1XE40(){return ChainHandler_obj.passnoalgL1XE40();};$/;"	f	namespace:trkeff
get_passnoalgL1XE45	source/ChainHandler.C	/^    const Float_t& get_passnoalgL1XE45(){return ChainHandler_obj.passnoalgL1XE45();};$/;"	f	namespace:trkeff
get_passrndm	source/ChainHandler.C	/^    const Int_t& get_passrndm(){return ChainHandler_obj.passrndm();}$/;"	f	namespace:trkeff
get_recalBrokeFlag	source/ChainHandler.C	/^    const Float_t& get_recalBrokeFlag(){return ChainHandler_obj.recalBrokeFlag();};$/;"	f	namespace:trkeff
get_thresh_actint	source/ChainHandler.C	/^    const Float_t& get_thresh_actint(){return ChainHandler_obj.actint();};$/;"	f	namespace:trkeff
ls	source/ChainHandler.C	/^    const unsigned int& ls() {return ChainHandler_obj.ls();}$/;"	f	namespace:trkeff
ls	source/ChainHandler.C	/^const unsigned int& ChainHandler::ls() {return ls_handle.get();}$/;"	f	class:ChainHandler
ls_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< unsigned int > ls_handle;$/;"	m	class:ChainHandler
m_branch	include/ChainHandler.h	/^            TBranch*     m_branch;$/;"	m	class:treeReaderSpace::Handle
m_branch_name	include/ChainHandler.h	/^            std::string            m_branch_name;$/;"	m	class:treeReaderSpace::Handle
m_branch_type	include/ChainHandler.h	/^            BranchType::value_type m_branch_type;$/;"	m	class:treeReaderSpace::Handle
m_entry	include/ChainHandler.h	/^            unsigned int           m_entry;$/;"	m	class:treeReaderSpace::Handle
m_is_loaded	include/ChainHandler.h	/^            bool                   m_is_loaded;$/;"	m	class:treeReaderSpace::Handle
m_object	include/ChainHandler.h	/^            T                      m_object;$/;"	m	class:treeReaderSpace::Handle
m_object_ptr	include/ChainHandler.h	/^            T*                     m_object_ptr;$/;"	m	class:treeReaderSpace::Handle
metMax	source/userInfo.C	/^Float_t metMax = 300.0;$/;"	v
metMin	source/userInfo.C	/^Float_t metMin = 0.0;$/;"	v
metl1	source/ChainHandler.C	/^const Float_t& ChainHandler::metl1(){return metl1_handle.get();};$/;"	f	class:ChainHandler
metl1Thresh	source/userInfo.C	/^Float_t metl1Thresh = 50.0;$/;"	v
metl1_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > metl1_handle;$/;"	m	class:ChainHandler
metl1thresh	include/userInfo.h	/^    Float_t metl1thresh;$/;"	m	class:userInfo
metmax	include/userInfo.h	/^    Float_t metmax;$/;"	m	class:userInfo
metmin	include/userInfo.h	/^    Float_t metmin;$/;"	m	class:userInfo
metoffrecal	source/ChainHandler.C	/^const Float_t& ChainHandler::metoffrecal(){return metoffrecal_handle.get();};$/;"	f	class:ChainHandler
metoffrecal_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > metoffrecal_handle;$/;"	m	class:ChainHandler
metoffrecalmuon	source/ChainHandler.C	/^const Float_t& ChainHandler::metoffrecalmuon(){return metoffrecalmuon_handle.get();};$/;"	f	class:ChainHandler
metoffrecalmuon_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > metoffrecalmuon_handle;$/;"	m	class:ChainHandler
metrefmuon	source/ChainHandler.C	/^const Float_t& ChainHandler::metrefmuon(){return metrefmuon_handle.get();};$/;"	f	class:ChainHandler
metrefmuon_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > metrefmuon_handle;$/;"	m	class:ChainHandler
mexoffrecal	source/ChainHandler.C	/^const Float_t& ChainHandler::mexoffrecal(){return mexoffrecal_handle.get();};$/;"	f	class:ChainHandler
mexoffrecal_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > mexoffrecal_handle;$/;"	m	class:ChainHandler
mexoffrecalmuon	source/ChainHandler.C	/^const Float_t& ChainHandler::mexoffrecalmuon(){return mexoffrecalmuon_handle.get();};$/;"	f	class:ChainHandler
mexoffrecalmuon_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > mexoffrecalmuon_handle;$/;"	m	class:ChainHandler
mexrefmuon	source/ChainHandler.C	/^const Float_t& ChainHandler::mexrefmuon(){return mexrefmuon_handle.get();};$/;"	f	class:ChainHandler
mexrefmuon_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > mexrefmuon_handle;$/;"	m	class:ChainHandler
meyoffrecal	source/ChainHandler.C	/^const Float_t& ChainHandler::meyoffrecal(){return meyoffrecal_handle.get();};$/;"	f	class:ChainHandler
meyoffrecal_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > meyoffrecal_handle;$/;"	m	class:ChainHandler
meyoffrecalmuon	source/ChainHandler.C	/^const Float_t& ChainHandler::meyoffrecalmuon(){return meyoffrecalmuon_handle.get();};$/;"	f	class:ChainHandler
meyoffrecalmuon_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > meyoffrecalmuon_handle;$/;"	m	class:ChainHandler
meyrefmuon	source/ChainHandler.C	/^const Float_t& ChainHandler::meyrefmuon(){return meyrefmuon_handle.get();};$/;"	f	class:ChainHandler
meyrefmuon_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > meyrefmuon_handle;$/;"	m	class:ChainHandler
muonFileName	include/userInfo.h	/^    TString muonFileName;$/;"	m	class:userInfo
muonFilename	source/userInfo.C	/^TString muonFilename = "PhysicsMain.L1KFmuontriggers.2016.f731f758_m1659m1710.Run309759.48Runs.root";$/;"	v
muonNentries	include/userInfo.h	/^    Int_t muonNentries;$/;"	m	class:userInfo
nbins	include/userInfo.h	/^    Int_t nbins;$/;"	m	class:userInfo
now	include/userInfo.h	/^    TDatime now;$/;"	m	class:userInfo
numMuonDenominator	include/userInfo.h	/^    Int_t numMuonDenominator;$/;"	m	class:userInfo
numMuonKeptCombined	include/userInfo.h	/^    Int_t numMuonKeptCombined;$/;"	m	class:userInfo
numbToKeep	source/userInfo.C	/^Int_t numbToKeep = 1108;$/;"	v
numberEventsToKeep	include/userInfo.h	/^    Int_t numberEventsToKeep;$/;"	m	class:userInfo
parameters	source/HLTEfficiencyAnalysis.C	/^    userInfo* parameters;$/;"	m	class:HLTEfficiencyAnalysis	file:
parameters	source/userInfo.C	/^userInfo* parameters;$/;"	v
passNoAlgFile	include/userInfo.h	/^    TString passNoAlgFile;$/;"	m	class:userInfo
passTransverseMassCut	source/mincerMacros.C	/^Bool_t passTransverseMassCut( const Float_t metoffrecal , const Float_t mexoffrecal  , const Float_t meyoffrecal ,$/;"	f
passmuon	source/ChainHandler.C	/^const Float_t& ChainHandler::passmuon(){return passmuon_handle.get();};$/;"	f	class:ChainHandler
passmuon_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > passmuon_handle;$/;"	m	class:ChainHandler
passmuvarmed	source/ChainHandler.C	/^const Float_t& ChainHandler::passmuvarmed(){return passmuvarmed_handle.get();};$/;"	f	class:ChainHandler
passmuvarmed_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > passmuvarmed_handle;$/;"	m	class:ChainHandler
passnoAlgNentries	include/userInfo.h	/^    Int_t passnoAlgNentries;$/;"	m	class:userInfo
passnoalgL1XE10	source/ChainHandler.C	/^const Float_t& ChainHandler::passnoalgL1XE10(){return passnoalgL1XE10_handle.get();};$/;"	f	class:ChainHandler
passnoalgL1XE10_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > passnoalgL1XE10_handle;$/;"	m	class:ChainHandler
passnoalgL1XE30	source/ChainHandler.C	/^const Float_t& ChainHandler::passnoalgL1XE30(){return passnoalgL1XE30_handle.get();};$/;"	f	class:ChainHandler
passnoalgL1XE30_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > passnoalgL1XE30_handle;$/;"	m	class:ChainHandler
passnoalgL1XE40	source/ChainHandler.C	/^const Float_t& ChainHandler::passnoalgL1XE40(){return passnoalgL1XE40_handle.get();};$/;"	f	class:ChainHandler
passnoalgL1XE40_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > passnoalgL1XE40_handle;$/;"	m	class:ChainHandler
passnoalgL1XE45	source/ChainHandler.C	/^const Float_t& ChainHandler::passnoalgL1XE45(){return passnoalgL1XE45_handle.get();};$/;"	f	class:ChainHandler
passnoalgL1XE45_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > passnoalgL1XE45_handle;$/;"	m	class:ChainHandler
passrndm	source/ChainHandler.C	/^const Int_t& ChainHandler::passrndm() {return passrndm_handle.get();}$/;"	f	class:ChainHandler
passrndm_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Int_t        > passrndm_handle;$/;"	m	class:ChainHandler
print7Efficiencies	macros/print7Efficiencies.C	/^Int_t print7Efficiencies(const TString& muonFileName = "PhysicsMain.L1KFmuontriggers.2016.f731f758_m1659m1710.Run309759.48Runs.root")$/;"	f
recalBrokeFlag	source/ChainHandler.C	/^const Float_t& ChainHandler::recalBrokeFlag(){return recalBrokeFlag_handle.get();};$/;"	f	class:ChainHandler
recalBrokeFlag_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< Float_t      > recalBrokeFlag_handle;$/;"	m	class:ChainHandler
run	source/ChainHandler.C	/^    const unsigned int& run() {return ChainHandler_obj.run();}$/;"	f	namespace:trkeff
run	source/ChainHandler.C	/^const unsigned int& ChainHandler::run() {return run_handle.get();}$/;"	f	class:ChainHandler
run_handle	include/ChainHandler.h	/^        treeReaderSpace ::Handle< unsigned int > run_handle;$/;"	m	class:ChainHandler
setActintCut	source/userInfo.C	/^void userInfo::setActintCut( const Float_t thresh ) { actintCut = thresh; };$/;"	f	class:userInfo
setAlgACombinedThresh	source/userInfo.C	/^void userInfo::setAlgACombinedThresh( const Float_t thresh ) { algACombinedThresh = thresh; };$/;"	f	class:userInfo
setAlgAIndividThresh	source/userInfo.C	/^void userInfo::setAlgAIndividThresh( const Float_t thresh ) { algAIndividThresh = thresh; };$/;"	f	class:userInfo
setAlgAName	source/userInfo.C	/^void userInfo::setAlgAName( const TString algA ) { algAName = algA; };$/;"	f	class:userInfo
setAlgBCombinedThresh	source/userInfo.C	/^void userInfo::setAlgBCombinedThresh( const Float_t thresh ) { algBCombinedThresh = thresh; };$/;"	f	class:userInfo
setAlgBIndividThresh	source/userInfo.C	/^void userInfo::setAlgBIndividThresh( const Float_t thresh ) { algBIndividThresh = thresh; };$/;"	f	class:userInfo
setAlgBName	source/userInfo.C	/^void userInfo::setAlgBName( const TString algB ) { algBName = algB; };$/;"	f	class:userInfo
setEpsilon	source/userInfo.C	/^void userInfo::setEpsilon( const Int_t epson ) { epsilon = epson; };$/;"	f	class:userInfo
setMuonNentries	source/userInfo.C	/^void userInfo::setMuonNentries( const Int_t num ) { muonNentries = num; };$/;"	f	class:userInfo
setNumMuonKeptCombinedAtThresh	source/userInfo.C	/^void userInfo::setNumMuonKeptCombinedAtThresh( const Int_t num ) { numMuonKeptCombined = num; };$/;"	f	class:userInfo
setNumMuonPassProcess1	source/userInfo.C	/^void userInfo::setNumMuonPassProcess1( const Float_t num ) {NumMuonPassProcess1 = num;};$/;"	f	class:userInfo
setNumMuonPassProcess2AlgA	source/userInfo.C	/^void userInfo::setNumMuonPassProcess2AlgA( const Float_t num ) {NumMuonPassProcess2AlgA = num;};$/;"	f	class:userInfo
setNumMuonPassProcess2AlgB	source/userInfo.C	/^void userInfo::setNumMuonPassProcess2AlgB( const Float_t num ) {NumMuonPassProcess2AlgB = num;};$/;"	f	class:userInfo
setNumMuonPassProcess2Combined	source/userInfo.C	/^void userInfo::setNumMuonPassProcess2Combined( const Float_t num ) {NumMuonPassProcess2Combined = num;};$/;"	f	class:userInfo
setNumPassNoAlgPassProcess1	source/userInfo.C	/^void userInfo::setNumPassNoAlgPassProcess1( const Float_t num ) {NumPassnoalgPassProcess1 = num;};$/;"	f	class:userInfo
setNumPassNoAlgPassProcess2AlgA	source/userInfo.C	/^void userInfo::setNumPassNoAlgPassProcess2AlgA( const Float_t num ) {NumPassnoalgProcess2AlgA = num;};$/;"	f	class:userInfo
setNumPassNoAlgPassProcess2AlgB	source/userInfo.C	/^void userInfo::setNumPassNoAlgPassProcess2AlgB( const Float_t num ) {NumPassnoalgProcess2AlgB = num;};$/;"	f	class:userInfo
setNumPassNoAlgPassProcess2Combined	source/userInfo.C	/^void userInfo::setNumPassNoAlgPassProcess2Combined( const Float_t num ) {NumPassnoalgProcess2AlgCombined = num;};$/;"	f	class:userInfo
setNumTotal	source/userInfo.C	/^void userInfo::setNumTotal( const Int_t num ) { numMuonDenominator = num; };$/;"	f	class:userInfo
set_PassnoalgNentries	source/userInfo.C	/^void userInfo::set_PassnoalgNentries( const Int_t num ) { passnoAlgNentries = num; };$/;"	f	class:userInfo
static_size	include/ChainHandler.h	/^            static_size$/;"	e	enum:treeReaderSpace::BranchType::value_type
threeEfficiencies	source/threeEfficiencies.C	/^TFile* threeEfficiencies( const TString& algA , const TString& algB,$/;"	f
thresh_actint	source/ChainHandler.C	/^const Float_t& ChainHandler::thresh_actint()(){return actint_handle.get();};$/;"	f	class:ChainHandler
treeReaderSpace	include/ChainHandler.h	/^namespace treeReaderSpace$/;"	n
trkeff	source/ChainHandler.C	/^namespace trkeff$/;"	n	file:
userInfo	include/userInfo.h	/^class userInfo : public TObject {$/;"	c
userInfo	source/userInfo.C	/^userInfo::userInfo()$/;"	f	class:userInfo
userInfo_h	include/userInfo.h	3;"	d
value_type	include/ChainHandler.h	/^        enum value_type$/;"	g	struct:treeReaderSpace::BranchType
zerobiasFileName	source/userInfo.C	/^TString zerobiasFileName = "PhysicsMain.All.noalgXEtriggers.2016.f731f758._m1659m1710.48Runs.root";$/;"	v
~HLTEfficiencyAnalysis	HLTEfficiencyAnalysis.C	/^HLTEfficiencyAnalysis::~HLTEfficiencyAnalysis()$/;"	f	class:HLTEfficiencyAnalysis
~HLTEfficiencyAnalysis	source/HLTEfficiencyAnalysis.C	/^HLTEfficiencyAnalysis::~HLTEfficiencyAnalysis()$/;"	f	class:HLTEfficiencyAnalysis
~Handle	include/ChainHandler.h	/^            virtual ~Handle() {}$/;"	f	class:treeReaderSpace::Handle
